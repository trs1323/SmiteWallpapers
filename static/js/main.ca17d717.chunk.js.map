{"version":3,"sources":["components/Skin.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Skin","state","window","onpopstate","e","props","goBack","filteredData","Object","keys","this","allSkins","map","obj","i","includes","godName","push","setState","className","onClick","god","src","width","alt","href","rel","target","Component","Home","sendSlug","allUpdates","x","real_categories","id","fetch","slug","then","res","json","j","temparray","filtered","content","split","filter","word","startsWith","length","slice","console","log","indexOfFirst","indexOf","indexOfSecond","onlyWord","URLsearchTerm","URLsearchTerm1","URLindexOfFirst","URLindexOfSecond","onlyURL","tempState","error","setTimeout","skinsloaded","setGodName","name","showGodSkins","timeNow","Date","now","timeInMonth","timeInTwoWeeks","gods","replace","card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca17d717.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n Link\r\n  } from \"react-router-dom\";\r\n\r\nexport default class Skin extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n        \r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){    \r\n        window.onpopstate = e => {\r\n            this.props.goBack()\r\n        }\r\n      }\r\n\r\n    componentDidMount(){\r\n        let filteredData = []\r\n            Object.keys(this.props.allSkins).map((obj, i) => {\r\n                if(this.props.allSkins[obj][0].includes(this.props.godName)){\r\n                    filteredData.push(this.props.allSkins[obj])\r\n                }\r\n            });\r\n\r\n        this.setState({\r\n            filteredData\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           \r\n            <div>\r\n                <div className=\"skins-header \">\r\n                    \r\n                <h1 className=\"go-back\" onClick={this.props.goBack}>Go Back</h1>\r\n                <h1 className=\"header\">{this.props.godName}</h1>\r\n                </div>\r\n                {this.state.filteredData && <div className=\"skins\">\r\n                {this.state.filteredData.map((god, i) =>(\r\n                        <div key={god[0]+i} className='single-skin'>\r\n                            <div className='single-skin'>\r\n                        <img src={god[4]} width=\"300\" alt={god[0]}/>\r\n                        <div className=\"skin-name\">\r\n                        <p>{god[0]}</p>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"links\">\r\n                        <a href={god[1]} rel=\"noreferrer\" target=\"_blank\" >1920x1080</a>\r\n                        <a href={god[2]} rel=\"noreferrer\" target=\"_blank\">2056x1446</a>\r\n                        <a href={god[3]} rel=\"noreferrer\" target=\"_blank\">3840x2160</a>\r\n                        <a href={god[4]} rel=\"noreferrer\" target=\"_blank\">Mobile</a>\r\n                        </div>\r\n                        </div>\r\n              \r\n                ))}</div>}\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Skin from './Skin';\r\n\r\nexport default class Home extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            allSkins: {},\r\n            skinsloaded: false,\r\n            showGodSkins: false,\r\n            godName: \"\",\r\n            timeNow:  Date.now(),\r\n            timeInMonth:  Date.now(),\r\n            timeInTwoWeeks:  Date.now() \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //const updateTime = localStorage.getItem('updateTime');\r\n        //if(this.state.timeNow >  updateTime){\r\n          \r\n        fetch(\"https://cms.smitegame.com/wp-json/smite-api/get-posts/1?tag=update-notes&per_page=10000\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (res) => {\r\n              this.setState({\r\n                allUpdates: res\r\n              });\r\n              //localStorage.setItem('allUpdates', JSON.stringify(this.state.allUpdates));\r\n              //localStorage.setItem('updateTime', this.state.timeInTwoWeeks);\r\n              this.sendSlug()\r\n            },\r\n            (error) => {\r\n              this.setState({\r\n                error\r\n              });\r\n            }\r\n          )\r\n        //} else{\r\n     {/*\r\n            const allUpdates = JSON.parse(localStorage.getItem('allUpdates'));\r\n            this.setState({\r\n                allUpdates: allUpdates\r\n            })\r\n            if(this.state.allUpdates){\r\n                setTimeout(this.sendSlug(), 1000)\r\n            }else{\r\n                setTimeout(this.sendSlug, 4000)\r\n            }\r\n        */}\r\n        //}\r\n\r\n        //const godTime = localStorage.getItem('godTime');\r\n        if(this.state.timeNow >  0){\r\n       \r\n        fetch(\"https://cms.smitegame.com/wp-json/smite-api/all-gods/1?\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (res) => {\r\n                  this.setState({\r\n                    gods: res\r\n                  });\r\n                 \r\n                }\r\n                \r\n            )\r\n        }\r\n      }\r\n      \r\n    sendSlug = () =>{\r\n        \r\n        if(this.state.allUpdates ){\r\n        const skinTime = 0;\r\n       // if(this.state.timeNow >  skinTime){\r\n           \r\n        for(let x = 0; x<this.state.allUpdates.length; x++){\r\n        if(this.state.allUpdates[x].real_categories.includes('PC')){\r\n            if(this.state.allUpdates[x].id === 15808){ continue }else{\r\n        fetch(`https://cms.smitegame.com/wp-json/smite-api/get-post/1?slug=${this.state.allUpdates[x].slug}`)\r\n          .then(res => res.json())\r\n          .then(\r\n            (res) => {\r\n                var splitt = res.content.split('\\n');\r\n            var filtered = splitt.filter(word => word.startsWith('<li><a href=') || word.startsWith('<p class=\\\"name\\\">') || word.startsWith('<h3>')|| word.startsWith('<h5>Recolor ') || word.startsWith(\"<h5>Shadows Over Hercopolis</h5>\") || word.startsWith(\"<h5>Legend of the Foxes</h5>\" || word.startsWith('<li><a href=\"https://www.smitegame.com/news/8-8-bo…-live-september-7th/\">More details here!</a></li>')))\r\n            filtered = filtered.filter(word => word !== \"<h5>Recolor &#8211; Shogun Hachiman</h5>\" && word!== \"<h5>Recolor &#8211; Red Rum Baron Samedi</h5>\" && word !== \"<h5>Recolor &#8211; Myrmidon Achilles</h5>\")\r\n           \r\n            \r\n            \r\n            var i,j,temparray,chunk = 5;\r\n            for (i=0,j=filtered.length; i<j; i+=chunk) {\r\n                temparray = filtered.slice(i,i+chunk);\r\n                console.log(temparray)\r\n                //grabs name\r\n                const searchTerm = '>';\r\n                const searchTerm1 = '<';\r\n                let indexOfFirst = temparray[0].indexOf(searchTerm,1);\r\n                let indexOfSecond = temparray[0].indexOf(searchTerm1,1);\r\n                let onlyWord = temparray[0].slice(indexOfFirst+ 1, indexOfSecond)\r\n\r\n                temparray[0] = onlyWord;\r\n\r\n                //grabs urls\r\n                const URLsearchTerm = '=';\r\n                let URLsearchTerm1 = \".jpg\";\r\n\r\n                let URLindexOfFirst = temparray[1].indexOf(URLsearchTerm);\r\n                let URLindexOfSecond = temparray[1].indexOf(URLsearchTerm1);\r\n                if(URLindexOfSecond === -1){\r\n                    URLindexOfSecond = temparray[1].indexOf('.png');\r\n                }\r\n                let onlyURL = temparray[1].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\r\n\r\n                temparray[1] = onlyURL;\r\n\r\n                URLindexOfFirst = temparray[2].indexOf(URLsearchTerm);\r\n                URLindexOfSecond = temparray[2].indexOf(URLsearchTerm1);\r\n                if(URLindexOfSecond === -1){\r\n                    URLindexOfSecond = temparray[2].indexOf('.png');\r\n                }\r\n                onlyURL = temparray[2].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\r\n\r\n                temparray[2] = onlyURL;\r\n                \r\n                URLindexOfFirst = temparray[3].indexOf(URLsearchTerm);\r\n                URLindexOfSecond = temparray[3].indexOf(URLsearchTerm1);\r\n                if(URLindexOfSecond === -1){\r\n                    URLindexOfSecond = temparray[3].indexOf('.png');\r\n                }\r\n                onlyURL = temparray[3].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\r\n\r\n                temparray[3] = onlyURL;\r\n                \r\n                URLindexOfFirst = temparray[4].indexOf(URLsearchTerm);\r\n                URLindexOfSecond = temparray[4].indexOf(URLsearchTerm1);\r\n                if(URLindexOfSecond === -1){\r\n                    URLindexOfSecond = temparray[4].indexOf('.png');\r\n                }\r\n                onlyURL = temparray[4].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\r\n\r\n                temparray[4] = onlyURL;\r\n\r\n                \r\n                let tempState = `${x}${i}`\r\n                this.setState({\r\n                    allSkins: {...this.state.allSkins, [tempState]: temparray}\r\n                  });\r\n                //localStorage.setItem('allSkins', JSON.stringify({...this.state.allSkins, [tempState]: temparray}));\r\n                }\r\n            },\r\n           \r\n            (error) => {\r\n             console.log(error)\r\n            }\r\n          )\r\n        }\r\n    }\r\n    if(x === this.state.allUpdates.length-1){\r\n     \r\n        //localStorage.setItem('allSkins', JSON.stringify(this.state.allSkins));\r\n        //localStorage.setItem('skinTime', this.state.timeInTwoWeeks);\r\n        setTimeout(this.setState({skinsloaded: true}), 3000)\r\n        \r\n    }\r\n    }\r\n//}else{\r\n  \r\n    //const allSkins = JSON.parse(localStorage.getItem('allSkins'));\r\n    {/* \r\n    this.setState({\r\n        allSkins: allSkins,\r\n        allUpdatesLoaded: true,\r\n        skinsloaded: true\r\n    })\r\n    */}\r\n//}\r\n}else{\r\n    setTimeout(this.sendSlug(), 10000)\r\n}\r\n    }\r\n\r\n    setGodName = (name) =>{\r\n        this.setState({\r\n            godName: name,\r\n            showGodSkins: true\r\n        })\r\n    }\r\n\r\n    goBack = () =>{\r\n        this.setState({\r\n            \r\n            showGodSkins: false\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n          \r\n                \r\n            <div>\r\n            \r\n                {this.state.showGodSkins ?(\r\n                \r\n                    <div>\r\n                    <Skin allSkins={this.state.allSkins} godName={this.state.godName} goBack={this.goBack}/>\r\n                    </div>\r\n                ):( this.state.gods && this.state.skinsloaded?(<div >\r\n            \r\n                    <div>\r\n                    <h1 className=\"header\">Smite Card Art Wallpapers</h1>\r\n                    <div className=\"home\">\r\n                    {this.state.gods.map((god, i) =>(<div onClick={()=> this.setGodName(god.name)} className=\"single-god\"  id={god.name.replace(/\\s/g, '')} >\r\n                            <div className='home-godcardart'>\r\n                            <img src={god.card.replace(/[']/g, '')} alt={god.name}/>\r\n                            </div>\r\n                            <div className='god-name'>\r\n                            <p onClick={()=> this.setGodName(god.name)}>{god.name}</p>\r\n                            </div>\r\n                   </div> ))}\r\n                    </div>\r\n                    </div>\r\n                    </div>): <h1 className=\"loading\">Loading...</h1>)}\r\n                    <footer className=\"footer\">\r\n                    <p>Smite Wallpapers By Tanner Shilson.</p>\r\n                    <p>Data &amp; Art provided by Hi-Rez Studios. © Hi-Rez Studios, Inc. All rights reserved.</p>\r\n                    </footer>\r\n            </div>\r\n          \r\n        )\r\n    }\r\n}","\r\nimport './App.css';\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}