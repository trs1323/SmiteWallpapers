{"version":3,"sources":["components/Skin.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Skin","state","window","onpopstate","e","props","goBack","filteredData","Object","keys","this","allSkins","map","obj","i","includes","godName","push","setState","className","to","onClick","god","src","width","alt","href","rel","target","Component","Home","sendSlug","allUpdates","skinTime","localStorage","getItem","timeNow","x","real_categories","id","fetch","slug","then","res","json","j","temparray","filtered","content","split","filter","word","startsWith","length","indexOfFirst","slice","indexOf","indexOfSecond","onlyWord","URLsearchTerm","URLsearchTerm1","URLindexOfFirst","URLindexOfSecond","onlyURL","tempState","setItem","JSON","stringify","error","console","log","timeInTwoWeeks","setTimeout","skinsloaded","parse","allUpdatesLoaded","setGodName","name","showGodSkins","Date","now","timeInMonth","updateTime","godTime","gods","path","replace","card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e560ec9.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {\n    BrowserRouter as Router,\n Link\n  } from \"react-router-dom\";\n\nexport default class Skin extends Component {\n    constructor(){\n        super()\n        this.state={\n        \n        }\n    }\n\n    componentDidUpdate(){    \n        window.onpopstate = e => {\n            this.props.goBack()\n        }\n      }\n\n    componentDidMount(){\n        let filteredData = []\n            Object.keys(this.props.allSkins).map((obj, i) => {\n                if(this.props.allSkins[obj][0].includes(this.props.godName)){\n                    filteredData.push(this.props.allSkins[obj])\n                }\n            });\n\n        this.setState({\n            filteredData\n        })\n    }\n\n    render() {\n        return (\n            <Router>\n            <div>\n                <div className=\"skins-header \">\n                    <Link to=\"/\">\n                <h1 className=\"go-back\" onClick={this.props.goBack}>Go Back</h1></Link>\n                <h1 className=\"header\">{this.props.godName}</h1>\n                </div>\n                {this.state.filteredData && <div className=\"skins\">\n                {this.state.filteredData.map((god, i) =>(\n                        <div key={god[0]+i} className='single-skin'>\n                            <div className='single-skin'>\n                        <img src={god[4]} width=\"300\" alt={god[0]}/>\n                        <div className=\"skin-name\">\n                        <p>{god[0]}</p>\n                        </div>\n                        </div>\n                        <div className=\"links\">\n                        <a href={god[1]} rel=\"noreferrer\" target=\"_blank\" >1920x1080</a>\n                        <a href={god[2]} rel=\"noreferrer\" target=\"_blank\">2056x1446</a>\n                        <a href={god[3]} rel=\"noreferrer\" target=\"_blank\">3840x2160</a>\n                        <a href={god[4]} rel=\"noreferrer\" target=\"_blank\">Mobile</a>\n                        </div>\n                        </div>\n              \n                ))}</div>}\n            </div>\n            </Router>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Skin from './Skin';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\nexport default class Home extends Component {\n    constructor(){\n        super()\n        this.state={\n            allSkins: {},\n            skinsloaded: false,\n            showGodSkins: false,\n            godName: \"\",\n            timeNow:  Date.now(),\n            timeInMonth:  Date.now() + \t86400000,\n            timeInTwoWeeks:  Date.now() + \t86400000\n        }\n    }\n\n    componentDidMount() {\n        const updateTime = localStorage.getItem('updateTime');\n        if(this.state.timeNow >  updateTime){\n          \n        fetch(\"https://cms.smitegame.com/wp-json/smite-api/get-posts/1?tag=update-notes&per_page=10000\")\n          .then(res => res.json())\n          .then(\n            (res) => {\n              this.setState({\n                allUpdates: res\n              });\n              localStorage.setItem('allUpdates', JSON.stringify(this.state.allUpdates));\n              localStorage.setItem('updateTime', this.state.timeInTwoWeeks);\n              this.sendSlug()\n            },\n            (error) => {\n              this.setState({\n                error\n              });\n            }\n          )\n        } else{\n     \n            const allUpdates = JSON.parse(localStorage.getItem('allUpdates'));\n            this.setState({\n                allUpdates: allUpdates\n            })\n            if(this.state.allUpdates){\n                setTimeout(this.sendSlug(), 1000)\n            }else{\n                setTimeout(this.sendSlug, 4000)\n            }\n            \n        }\n\n        const godTime = localStorage.getItem('godTime');\n        if(this.state.timeNow >  godTime){\n       \n        fetch(\"https://cms.smitegame.com/wp-json/smite-api/all-gods/1?\")\n            .then(res => res.json())\n            .then(\n                (res) => {\n                  this.setState({\n                    gods: res\n                  });\n                  localStorage.setItem('gods', JSON.stringify(this.state.gods));\n                  localStorage.setItem('godTime', this.state.timeInMonth);\n                }\n                \n            )\n        }else{\n           \n            const gods = JSON.parse(localStorage.getItem('gods'));\n            this.setState({\n                gods: gods\n            })\n        }\n      }\n      \n    sendSlug = () =>{\n        \n        if(this.state.allUpdates ){\n        const skinTime = localStorage.getItem('skinTime');\n        if(this.state.timeNow >  skinTime){\n           \n        for(let x = 0; x<this.state.allUpdates.length; x++){\n        if(this.state.allUpdates[x].real_categories.includes('PC')){\n            if(this.state.allUpdates[x].id === 15808){ continue }else{\n        fetch(`https://cms.smitegame.com/wp-json/smite-api/get-post/1?slug=${this.state.allUpdates[x].slug}`)\n          .then(res => res.json())\n          .then(\n            (res) => {\n                var splitt = res.content.split('\\n');\n            var filtered = splitt.filter(word => word.startsWith('<li><a href=') || word.startsWith('<p class=\\\"name\\\">') || word.startsWith('<h3>')|| word.startsWith('<h5>Recolor ') || word.startsWith(\"<h5>Shadows Over Hercopolis</h5>\") || word.startsWith(\"<h5>Legend of the Foxes</h5>\"))\n            filtered = filtered.filter(word => word !== \"<h5>Recolor &#8211; Shogun Hachiman</h5>\" && word!== \"<h5>Recolor &#8211; Red Rum Baron Samedi</h5>\" && word !== \"<h5>Recolor &#8211; Myrmidon Achilles</h5>\")\n           \n            \n            \n            var i,j,temparray,chunk = 5;\n            for (i=0,j=filtered.length; i<j; i+=chunk) {\n                temparray = filtered.slice(i,i+chunk);\n\n                //grabs name\n                const searchTerm = '>';\n                const searchTerm1 = '<';\n                let indexOfFirst = temparray[0].indexOf(searchTerm,1);\n                let indexOfSecond = temparray[0].indexOf(searchTerm1,1);\n                let onlyWord = temparray[0].slice(indexOfFirst+ 1, indexOfSecond)\n\n                temparray[0] = onlyWord;\n\n                //grabs urls\n                const URLsearchTerm = '=';\n                let URLsearchTerm1 = \".jpg\";\n\n                let URLindexOfFirst = temparray[1].indexOf(URLsearchTerm);\n                let URLindexOfSecond = temparray[1].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[1].indexOf('.png');\n                }\n                let onlyURL = temparray[1].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[1] = onlyURL;\n\n                URLindexOfFirst = temparray[2].indexOf(URLsearchTerm);\n                URLindexOfSecond = temparray[2].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[2].indexOf('.png');\n                }\n                onlyURL = temparray[2].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[2] = onlyURL;\n                \n                URLindexOfFirst = temparray[3].indexOf(URLsearchTerm);\n                URLindexOfSecond = temparray[3].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[3].indexOf('.png');\n                }\n                onlyURL = temparray[3].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[3] = onlyURL;\n                \n                URLindexOfFirst = temparray[4].indexOf(URLsearchTerm);\n                URLindexOfSecond = temparray[4].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[4].indexOf('.png');\n                }\n                onlyURL = temparray[4].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[4] = onlyURL;\n\n                \n                let tempState = `${x}${i}`\n                this.setState({\n                    allSkins: {...this.state.allSkins, [tempState]: temparray}\n                  });\n                localStorage.setItem('allSkins', JSON.stringify({...this.state.allSkins, [tempState]: temparray}));\n                }\n            },\n           \n            (error) => {\n             console.log(error)\n            }\n          )\n        }\n    }\n    if(x === this.state.allUpdates.length-1){\n     \n        //localStorage.setItem('allSkins', JSON.stringify(this.state.allSkins));\n        localStorage.setItem('skinTime', this.state.timeInTwoWeeks);\n        setTimeout(this.setState({skinsloaded: true}), 3000)\n        \n    }\n    }\n}else{\n  \n    const allSkins = JSON.parse(localStorage.getItem('allSkins'));\n    this.setState({\n        allSkins: allSkins,\n        allUpdatesLoaded: true,\n        skinsloaded: true\n    })\n    \n}\n}else{\n    setTimeout(this.sendSlug(), 10000)\n}\n    }\n\n    setGodName = (name) =>{\n        this.setState({\n            godName: name,\n            showGodSkins: true\n        })\n    }\n\n    goBack = () =>{\n        this.setState({\n            \n            showGodSkins: false\n        })\n    }\n    render() {\n        return (\n            <Router>\n            <Switch>\n                \n            <div>\n            \n                {this.state.showGodSkins ?(\n                <Route path=\"/skins\">\n                    <div>\n                    <Skin allSkins={this.state.allSkins} godName={this.state.godName} goBack={this.goBack}/>\n                    </div>\n                </Route>):( this.state.gods && this.state.skinsloaded?(<Route path=\"/\"> <div >\n            \n                    <div>\n                    <h1 className=\"header\">Smite Card Art Wallpapers</h1>\n                    <div className=\"home\">\n                    {this.state.gods.map((god, i) =>(<Link to=\"skins\" key={god.id}><div onClick={()=> this.setGodName(god.name)} className=\"single-god\"  id={god.name.replace(/\\s/g, '')} >\n                            <div className='home-godcardart'>\n                            <img src={god.card.replace(/[']/g, '')} alt={god.name}/>\n                            </div>\n                            <div className='god-name'>\n                            <p onClick={()=> this.setGodName(god.name)}>{god.name}</p>\n                            </div>\n                   </div></Link> ))}\n                    </div>\n                    </div>\n                    </div></Route>): <h1 className=\"loading\">Loading...</h1>)}\n                    <footer className=\"footer\">\n                    <p>Smite Wallpapers By Tanner Shilson.</p>\n                    <p>Data &amp; Art provided by Hi-Rez Studios. © Hi-Rez Studios, Inc. All rights reserved.</p>\n                    </footer>\n            </div>\n            </Switch>\n            </Router>\n        )\n    }\n}","\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}