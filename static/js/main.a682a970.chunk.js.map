{"version":3,"sources":["components/Skin.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Skin","state","filteredData","Object","keys","this","props","allSkins","map","obj","i","includes","godName","push","setState","className","onClick","goBack","god","src","width","alt","href","rel","target","Component","Home","sendSlug","x","stateTitle","allUpdates","title","id","real_categories","fetch","slug","then","res","json","j","temparray","splitt","content","split","filtered","filter","word","startsWith","length","indexOfFirst","slice","indexOf","indexOfSecond","onlyWord","URLsearchTerm","URLsearchTerm1","URLindexOfFirst","URLindexOfSecond","onlyURL","tempState","new","filteredArr","error","console","log","setGodName","name","showGodSkins","isLoaded","gods","replace","card","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a682a970.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Skin extends Component {\n    constructor(){\n        super()\n        this.state={\n        \n        }\n    }\n\n    componentDidMount(){\n        let filteredData = []\n            Object.keys(this.props.allSkins).map((obj, i) => {\n                if(this.props.allSkins[obj][0].includes(this.props.godName)){\n                    filteredData.push(this.props.allSkins[obj])\n                }\n            });\n\n        this.setState({\n            filteredData\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"skins-header \">\n                <p onClick={this.props.goBack}>Go Back</p>\n                <h1 className=\"header\">{this.props.godName}</h1>\n                </div>\n                {this.state.filteredData && <div className=\"skins\">\n                {this.state.filteredData.map((god, i) =>(\n                        <div key={god[0]} className='single-skin'>\n                            <div className='single-skin'>\n                        <img src={god[4]} width=\"300\" alt={god[0]}/>\n                        <div className=\"skin-name\">\n                        <p>{god[0]}</p>\n                        </div>\n                        </div>\n                        <div className=\"links\">\n                        <a href={god[1]} rel=\"noreferrer\" target=\"_blank\" >1920x1080</a>\n                        <a href={god[2]} rel=\"noreferrer\" target=\"_blank\">2056x1446</a>\n                        <a href={god[3]} rel=\"noreferrer\" target=\"_blank\">3840x2160</a>\n                        <a href={god[4]} rel=\"noreferrer\" target=\"_blank\">1080x1920</a>\n                        </div>\n                        </div>\n              \n                ))}</div>}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Skin from './Skin';\n\nexport default class Home extends Component {\n    constructor(){\n        super()\n        this.state={\n            allSkins: {},\n            showGodSkins: false,\n            godName: \"\"\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://cms.smitegame.com/wp-json/smite-api/get-posts/1?tag=update-notes&per_page=10000\")\n          .then(res => res.json())\n          .then(\n            (res) => {\n              this.setState({\n                isLoaded: true,\n                allUpdates: res\n              });\n              this.sendSlug()\n            },\n           \n            (error) => {\n              this.setState({\n                isLoaded: true,\n                error\n              });\n            }\n          )\n        fetch(\"https://cms.smitegame.com/wp-json/smite-api/all-gods/1?\")\n            .then(res => res.json())\n            .then(\n                (res) => {\n                  this.setState({\n                    gods: res\n                  });\n                  \n                }\n            )\n      }\n      \n    sendSlug = () =>{\n        for(let x = 0; x<this.state.allUpdates.length; x++){\n            let stateTitle = `${this.state.allUpdates[x].title}${this.state.allUpdates[x].id}`\n        if(this.state.allUpdates[x].real_categories.includes('PC')){\n            if(this.state.allUpdates[x].id === 15808){ continue }else{\n        fetch(`https://cms.smitegame.com/wp-json/smite-api/get-post/1?slug=${this.state.allUpdates[x].slug}`)\n          .then(res => res.json())\n          .then(\n            (res) => {\n                var splitt = res.content.split('\\n');\n            var filtered = splitt.filter(word => word.startsWith('<li><a href=') || word.startsWith('<p class=\\\"name\\\">') || word.startsWith('<h3>')|| word.startsWith('<h5>Recolor ') || word.startsWith(\"<h5>Shadows Over Hercopolis</h5>\") || word.startsWith(\"<h5>Legend of the Foxes</h5>\"))\n            filtered = filtered.filter(word => word !== \"<h5>Recolor &#8211; Shogun Hachiman</h5>\" && word!== \"<h5>Recolor &#8211; Red Rum Baron Samedi</h5>\" && word !== \"<h5>Recolor &#8211; Myrmidon Achilles</h5>\")\n           \n            \n            \n            var i,j,temparray,chunk = 5;\n            for (i=0,j=filtered.length; i<j; i+=chunk) {\n                temparray = filtered.slice(i,i+chunk);\n\n                //grabs name\n                const searchTerm = '>';\n                const searchTerm1 = '<';\n                let indexOfFirst = temparray[0].indexOf(searchTerm,1);\n                let indexOfSecond = temparray[0].indexOf(searchTerm1,1);\n                let onlyWord = temparray[0].slice(indexOfFirst+ 1, indexOfSecond)\n\n                temparray[0] = onlyWord;\n\n                //grabs urls\n                const URLsearchTerm = '=';\n                let URLsearchTerm1 = \".jpg\";\n\n                let URLindexOfFirst = temparray[1].indexOf(URLsearchTerm);\n                let URLindexOfSecond = temparray[1].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[1].indexOf('.png');\n                }\n                let onlyURL = temparray[1].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[1] = onlyURL;\n\n                URLindexOfFirst = temparray[2].indexOf(URLsearchTerm);\n                URLindexOfSecond = temparray[2].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[2].indexOf('.png');\n                }\n                onlyURL = temparray[2].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[2] = onlyURL;\n                \n                URLindexOfFirst = temparray[3].indexOf(URLsearchTerm);\n                URLindexOfSecond = temparray[3].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[3].indexOf('.png');\n                }\n                onlyURL = temparray[3].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[3] = onlyURL;\n                \n                URLindexOfFirst = temparray[4].indexOf(URLsearchTerm);\n                URLindexOfSecond = temparray[4].indexOf(URLsearchTerm1);\n                if(URLindexOfSecond === -1){\n                    URLindexOfSecond = temparray[4].indexOf('.png');\n                }\n                onlyURL = temparray[4].slice(URLindexOfFirst+ 2, URLindexOfSecond+ 4)\n\n                temparray[4] = onlyURL;\n\n                \n                \n                \n                let tempState = `${x}${i}`\n                this.setState({\n                    allSkins: {...this.state.allSkins, [tempState]: temparray}\n                  });\n                }\n            this.setState({\n                [stateTitle]: {...res, new: splitt, filteredArr: filtered}\n            })\n            \n            },\n           \n            (error) => {\n             console.log(error)\n            }\n          )\n        }\n    }\n    }\n    }\n\n    setGodName = (name) =>{\n        this.setState({\n            godName: name,\n            showGodSkins: true\n        })\n    }\n\n    goBack = () =>{\n        this.setState({\n            \n            showGodSkins: false\n        })\n    }\n    render() {\n        return (\n            <div>\n                {this.state.showGodSkins ?(\n                    <div>\n                    <Skin allSkins={this.state.allSkins} godName={this.state.godName} goBack={this.goBack}/>\n                    </div>\n                ):(this.state.gods &&<div >\n                    <h1 className=\"header\">Smite Card Art Wallpapers</h1>\n                    <div className=\"home\">\n                    {this.state.gods.map((god, i) =>(<div onClick={()=> this.setGodName(god.name)} className=\"single-god\" key={god.id} id={god.name.replace(/\\s/g, '')} >\n                            <div className='home-godcardart'>\n                            <img src={god.card.replace(/[']/g, '')} alt={god.name}/>\n                            </div>\n                            <div className='god-name'>\n                            <p onClick={()=> this.setGodName(god.name)}>{god.name}</p>\n                            </div>\n                   </div> ))}\n                    </div>\n                    </div>)}\n                    <footer className=\"footer\">\n                    <p>Smite Wallpapers By Tanner Shilson.</p>\n                    <p>Data &amp; Art provided by Hi-Rez Studios. © Hi-Rez Studios, Inc. All rights reserved.</p>\n                    </footer>\n            </div>\n        )\n    }\n}","\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}